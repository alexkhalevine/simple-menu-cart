{"version":3,"sources":["contextState.js","constants.js","components/Fieldset/index.js","components/Fieldset/FieldsetComponent.jsx","components/Dish/index.js","components/Dish/DishComponent.jsx","components/NewDish/index.js","components/NewDish/NewDishComponent.jsx","components/Day/index.js","components/Day/DayComponent.jsx","components/Days/index.js","components/Days/DaysComponent.jsx","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","useStateValue","useContext","StateProvider","initialState","reducer","children","Provider","value","useReducer","dishTags","key","text","dishCategories","FieldsetComponent","name","type","onChange","onBlur","isArea","isDropdown","dropdownOptions","htmlFor","cols","rows","className","placeholder","id","Dropdown","floating","defaultValue","options","DishComponent","data","index","dayName","dispatch","useState","dishName","tag","allergens","price","category","fieldValues","setFieldValue","e","target","dishContent","onClick","NewDishComponent","defaultState","DayComponent","open","dishes","days","isOpen","setIsOpen","defaultChecked","setTimeout","map","dishList","dish","getDishByCategory","length","DaysComponent","Object","keys","writeData","a","axios","post","console","log","Reducer","state","action","newStateWithDeletedDish","filter","assign","App","props","setData","fetchData","result","useEffect","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21465008.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const useStateValue = () => useContext(StateContext);\n\nconst StateProvider = ({ initialState, reducer, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport default StateProvider;\n","export const getApiURL = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return 'http://dev.suche-transport.at/write';\n  }\n\n  return 'http://localhost:7000/write';\n}\n\nexport const dishTags = [\n  {\n    key: 'fit',\n    text: 'fit',\n    value: 'fit',\n  },\n  {\n    key: 'good',\n    text: 'good',\n    value: 'good',\n  },\n  {\n    key: 'healthy',\n    text: 'healthy',\n    value: 'healthy',\n  },\n  {\n    key: 'tasty',\n    text: 'tasty',\n    value: 'tasty',\n  },\n]\n\nexport const dishCategories = [\n  {\n    key: '1',\n    text: 'soups and starters',\n    value: '1',\n  },\n  {\n    key: '2',\n    text: 'main dishes',\n    value: '2',\n  },\n  {\n    key: '3',\n    text: 'desserts',\n    value: '3',\n  },\n]\n","import FieldsetComponent from './FieldsetComponent';\n\nexport default FieldsetComponent;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst Fieldset = ({\n  name,\n  type,\n  value,\n  onChange,\n  onBlur,\n  isArea,\n  isDropdown,\n  dropdownOptions\n}) => {\n  if (isArea) {\n    return (\n      <fieldset>\n        <label htmlFor={name}>{name}</label>\n        <textarea cols=\"30\" rows=\"2\" className={name} placeholder={name} id={name} name={name} type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\n      </fieldset>\n    )\n  }\n\n  if (isDropdown) {\n    return (\n      <fieldset>\n        <label htmlFor={name}>{name}</label>\n        <Dropdown\n          id={name}\n          name={name}\n          floating\n          defaultValue={value}\n          options={dropdownOptions}\n          onChange={onChange}\n        />\n      </fieldset>\n    )\n  }\n\n  return (\n    <fieldset>\n      <label htmlFor={name}>{name}</label>\n      <input className={name} name={name} type={type} value={value} onChange={onChange} onBlur={onBlur} />\n    </fieldset>\n  )\n}\n\nexport default Fieldset;\n","import DishComponent from './DishComponent.jsx';\nexport default DishComponent;","import React from 'react';\nimport { useState } from 'react';\nimport {dishTags, dishCategories} from '../../constants';\nimport Fieldset from '../Fieldset';\nimport { useStateValue } from '../../contextState';\nimport './index.scss';\n\nconst DishComponent = ({\n  data,\n  index,\n  dayName,\n}) => {\n  const [days, dispatch] = useStateValue();\n  const [fieldValues, setFieldValue] = useState({\n    dishName: data.dishName,\n    tag: data.tag,\n    allergens: data.allergens,\n    price: data.price,\n    category: data.category,\n  });\n\n  const onChange = (e, data) => {\n    setFieldValue({ ...fieldValues, [e.target.name]: e.target.value });\n  };\n\n  const onBlur = (e) => {\n    dispatch({\n      type: 'editDish',\n      dishContent: fieldValues,\n      dayName,\n      index,\n    });\n  };\n\n  const onTagChange = (e, data) => {\n    dispatch({\n      type: 'editDish',\n      dishContent: {...fieldValues, tag: data.value},\n      dayName,\n      index,\n    });\n  }\n\n  const onCategoryChange = (e, data) => {\n    dispatch({\n      type: 'editDish',\n      dishContent: {...fieldValues, category: data.value},\n      dayName,\n      index,\n    });\n  }\n\n  const remove = () => {\n    dispatch({\n      type: 'removeDish',\n      dayName,\n      index,\n    });\n  }\n\n  return (\n    <article className={\"dish\"}>\n      <Fieldset\n        name=\"dishName\"\n        type=\"text\"\n        value={fieldValues.dishName}\n        onChange={onChange}\n        onBlur={onBlur}\n        isArea\n      />\n      <Fieldset\n        name=\"category\"\n        value={fieldValues.category}\n        onChange={onCategoryChange}\n        dropdownOptions={dishCategories}\n        isDropdown\n      />\n      <Fieldset\n        name=\"tag\"\n        value={fieldValues.tag}\n        onChange={onTagChange}\n        dropdownOptions={dishTags}\n        isDropdown\n      />\n      <Fieldset\n        name=\"allergens\"\n        type=\"text\"\n        value={fieldValues.allergens}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <Fieldset\n        name=\"price\"\n        type=\"number\"\n        value={fieldValues.price}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <button className=\"btn-remove\" onClick={remove}>x</button>\n    </article>\n  );\n}\n\nexport default DishComponent;\n","import NewDishComponent from './NewDishComponent.jsx';\nexport default NewDishComponent;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useStateValue } from '../../contextState';\nimport Fieldset from '../Fieldset';\nimport {dishTags, dishCategories} from '../../constants';\nimport './index.scss';\n\nconst NewDishComponent = ({\n  dayName,\n}) => {\n  const defaultState = {\n    dishName: \"\",\n    tag: \"fit\",\n    allergens: \"\",\n    category: \"1\",\n  };\n\n  const [days, dispatch] = useStateValue();\n  const [fieldValues, setFieldValue] = useState(defaultState);\n\n  const onChange = (e) => {\n    setFieldValue({ ...fieldValues, [e.target.name]: e.target.value });\n  };\n\n  const addNewDish = () => {\n    dispatch({\n      type: 'addDish',\n      dishContent: fieldValues,\n      dayName,\n    });\n\n    setFieldValue(defaultState);\n  }\n\n  const onDropdownChange = (e, data) => {\n    setFieldValue({ ...fieldValues, tag: data.value });\n  }\n\n  const onCategoryChange = (e, data) => {\n    setFieldValue({ ...fieldValues, category: data.value });\n  }\n\n  return (\n    <section className={\"newDishWrapper\"}>\n      <h3>Add new dish</h3>\n      <article className={\"newDish\"}>\n        <Fieldset\n          name=\"dishName\"\n          type=\"text\"\n          value={fieldValues.dishName}\n          onChange={onChange}\n          isArea\n        />\n        <Fieldset\n          name=\"category\"\n          value={fieldValues.category}\n          onChange={onCategoryChange}\n          dropdownOptions={dishCategories}\n          isDropdown\n        />\n        <Fieldset\n          name=\"tag\"\n          value={fieldValues.tag}\n          onChange={onDropdownChange}\n          dropdownOptions={dishTags}\n          isDropdown\n        />\n        <Fieldset\n          name=\"allergens\"\n          type=\"text\"\n          value={fieldValues.allergens}\n          onChange={onChange}\n        />\n        <Fieldset\n          name=\"price\"\n          type=\"number\"\n          value={fieldValues.price}\n          onChange={onChange}\n        />\n        <button className=\"btn-add\" onClick={addNewDish}>+</button>\n      </article>\n    </section>\n  );\n}\n\nexport default NewDishComponent;\n","import DayComponent from './DayComponent.jsx';\nexport default DayComponent;","import React, { useState, useEffect } from 'react';\nimport {dishCategories} from '../../constants';\nimport { useStateValue } from '../../contextState';\nimport Dish from '../Dish';\nimport NewDish from '../NewDish';\nimport './index.scss';\n\nconst DayComponent = ({\n  name,\n  open,\n  dishes,\n}) => {\n  const [days, dispatch] = useStateValue();\n  const [isOpen, setIsOpen] = useState(open);\n\n  const save = () => {\n    dispatch({\n      type: 'saveDish',\n      days,\n    })\n  }\n\n  const onBlur = () => {\n    setIsOpen(!isOpen);\n\n    setTimeout(() => {\n      dispatch({\n        type: 'updateOpen',\n        open: !isOpen,\n        dayName: name,\n      });\n    }, 100)\n  };\n\n  const getDishByCategory = (category) => {\n      return dishes.map((dish, index) => {\n        const { dishName } = dish;\n        if (dish.category == category) {\n          return (\n            <Dish\n              key={`${dishName}_${index}`}\n              index={index}\n              data={dish}\n              dayName={name}\n            />\n          )\n        }\n      })\n  }\n\n  return (\n    <section className=\"day\">\n      <header>\n        <h2>{name} <small>{isOpen ? \"(open)\" : \"(closed)\"}</small></h2>\n        <label className=\"switch\">\n          <input type=\"checkbox\" defaultChecked={isOpen} onChange={() => onBlur()}/>\n          <span className=\"slider round\"></span>\n        </label>\n      </header>\n          {dishCategories.map((category, index) => {\n            const dishList= getDishByCategory(index+1);\n\n            if (dishList.length > 0) {\n              return (\n                <>\n                  <h3>{category.text}</h3>\n                  {dishList}\n                </>\n              );\n            }\n          })}\n\n          <NewDish\n            dayName={name}\n          />\n      <button className=\"btn\" onClick={save}>save</button>\n    </section>\n  )\n}\n\nexport default DayComponent;\n","import DaysComponent from './DaysComponent.jsx';\nexport default DaysComponent;","import React from 'react';\nimport { useStateValue } from '../../contextState';\nimport Day from '../Day';\nimport './index.css';\n\nconst DaysComponent = () => {\n  const [days, dispatch] = useStateValue();\n\n  return (\n    <div className=\"days\">\n\n      {\n        Object.keys(days).map((dayName, index) => {\n          const { open, dishes } = days[dayName]\n\n          return (\n            <Day\n              key={`${dayName}_${index}`}\n              name={dayName}\n              open={open}\n              dishes={dishes}\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default DaysComponent;\n","import axios from 'axios';\nimport { getApiURL } from '../constants';\n\nconst writeData = async (data) => {\n  try {\n    await axios.post(getApiURL(), data);\n  } catch (err) {\n    console.log(`... could not write data, failed with ${err}`);\n  }\n}\n\nconst Reducer = (state, action) => {\n  switch (action.type) {\n    case 'addDish':\n      return {\n        ...state,\n        [action.dayName]: {\n          ...state[action.dayName],\n          dishes: [...state[action.dayName].dishes, action.dishContent]\n        }\n      };\n    case 'removeDish':\n      const newStateWithDeletedDish = {\n        ...state,\n        [action.dayName]: {\n          ...state[action.dayName],\n          dishes: [...state[action.dayName].dishes.filter((dish, index) => {\n            if (index != action.index) {\n              return dish\n            }\n          })]\n        }\n      }\n\n      // ---- PERSIST\n      writeData(newStateWithDeletedDish);\n\n      return newStateWithDeletedDish;\n    case 'editDish':\n      return {\n        ...state,\n        [action.dayName]: {\n          ...state[action.dayName],\n          dishes: Object.assign([], state[action.dayName].dishes, { [action.index]: action.dishContent })\n        }\n      };\n    case 'saveDish':\n      // ---- PERSIST\n      writeData(state);\n\n      return {\n        ...state,\n      };\n    case 'updateOpen':\n      console.log('state: ', action.open);\n      return {\n        ...state,\n        [action.dayName]: {\n          ...state[action.dayName],\n          open: action.open,\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport StateProvider from './contextState';\nimport './App.scss';\nimport Days from './components/Days';\nimport reducer from './reducers';\n\nconst App = props => {\n  const [data, setData] = useState();\n\n  const fetchData = async () => {\n    try {\n      const result = await axios('data.json');\n      setData(result.data);\n    } catch (err) {\n      console.log(`... could not load data, failed with ${err}`);\n    }\n  }\n\n  useEffect(\n    () => {\n      fetchData();\n    }, []);\n\n  return (\n    <>\n      {data ? (\n        <StateProvider initialState={data} reducer={reducer}>\n          <div className=\"admin-container\">\n            <header className=\"admin-header\">\n              <h1>Menu Editor</h1>\n              <a href=\"http://dev.suche-transport.at/preview\" target=\"blank\" className={\"btn-preview\"}>preview</a>\n            </header>\n            <Days />\n          </div>\n        </StateProvider>\n      ) :\n        <div className=\"preloader\">\n          <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n      }\n    </>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"semantic-ui-css/semantic.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}